第三周第一节关键词：
    ☛ js盒子模型属性
    ☛ js常见事件
    ☛ 实战案例：
        ☛ offset方法 获取元素距离body的偏移量
        ☛ win方法 获取浏览器窗口的属性
        ☛ 回到顶部
        ☛ getCss  获取元素的样式
        ☛ setCss  设置元素的样式
        ☛ 瀑布流
===============================================================================
1、js盒子模型属性
    1>.client系列（4）：
        clientWidth：内容宽度+左右padding
        clientHeight：内容宽度+上下padding
        clientLeft：左边框的宽度
        clientTop：上边框的宽度
    2>.offset系列（5）：
        offsetWidth：clientWidth+左右border
        offsetHeight：clientWidth+上下border
        offsetParent：返回最近的祖先定位元素。offsetParent的值，要取决于它的上一级节点是否包含定位属性。这个定位属性的值必须是relative,absolute,fixed中的一种，如果上一级不包含定位属性，那么再继续向上查找，如果查找到body仍然没有，那么默认就是body
        offsetLeft：当前元素的外边框距离offsetParent的内边框的偏移量（水平方向）
        offsetTop：当前元素的外边框距离offsetParent的内边框的偏移量（垂直方向）
        ps:由于offsetParent会随着定位属性变化，那么offsetLeft/offsetTop的值也会随之变化
            body.offsetParent=null
            document.parentNode=null
    3>.scroll系列（4）：
        scrollWidth：如果有内容溢出，==>左padding+内容宽度，没有内容溢出，==》内容宽度+左右padding
        scrollHeight：如果有内容溢出，==>上padding+内容高度，没有内容溢出，==》内容宽度+上下padding
        ps：如果没有内容溢出，和clientWidth/clientHeight相同
        scrollLeft：内容区域滚出去的宽度
        scrollTop：内容区域滚出去的高度
    总结：所有盒子模型属性，只有scrollLeft和scrollTop支持赋值
2、js常见事件
    1>.鼠标事件：
        onclick	当用户点击某个对象时调用的事件句柄。
        ondblclick	当用户双击某个对象时调用的事件句柄。
        onmousemove	鼠标被移动。
        onmouseover	鼠标移到某元素之上。
        onmouseout	鼠标从某元素移开。
        onmousedown	    鼠标按钮被按下。
        onmouseup	鼠标按键被松开。
        onmouseenter	当鼠标指针移动到元素上时触发。
            *****ps:onmouseenter 事件类似于 onmouseover 事件。 唯一的区别是 onmouseenter 事件不支持冒泡 。
        onmouseleave	当鼠标指针移出元素时触发
        oncontextmenu	在用户点击鼠标右键打开上下文菜单时触发
    2>.键盘事件：
        onkeydown	某个键盘按键被按下。
        onkeypress	某个键盘按键被按下并松开。
        onkeyup	某个键盘按键被松开。
    3>.框架/对象事件
        onabort	图像的加载被中断。
        onbeforeunload	该事件在即将离开页面（刷新或关闭）时触发
        onerror	在加载文档或图像时发生错误。
        onhashchange	该事件在当前 URL 的锚部分发生修改时触发。
        onload	一张页面或一幅图像完成加载。
        onpageshow	该事件在用户访问页面时触发
        onpagehide	该事件在用户离开当前网页跳转到另外一个页面时触发
        onresize	窗口或框架被重新调整大小。
        onscroll	当文档被滚动时发生的事件。
        onunload	用户退出页面。
    4>.表单事件：
        onblur	元素失去焦点时触发
        onchange	该事件在表单元素的内容改变时触发
        onfocus	元素获取焦点时触发
        onfocusin	元素即将获取焦点时触发
        onfocusout	元素即将失去焦点时触发
        oninput	元素获取用户输入时触发
        onreset	表单重置时触发
        onsearch	用户向搜索域输入文本时触发
        onselect	用户选取文本时触发
        onsubmit	表单提交时触发
    5>.剪贴板事件：
        oncopy	该事件在用户拷贝元素内容时触发
        oncut	该事件在用户剪切元素内容时触发
        onpaste	该事件在用户粘贴元素内容时触发
    6>.拖动事件
        ondrag	该事件在元素正在拖动时触发
        ondragend	该事件在用户完成元素的拖动时触发
        ondragenter	该事件在拖动的元素进入放置目标时触发
        ondragleave	该事件在拖动元素离开放置目标时触发
        ondragover	该事件在拖动元素在放置目标上时触发
        ondragstart	该事件在用户开始拖动元素时触发
        ondrop	该事件在拖动元素放置在目标区域时触发
    7>.多媒体事件
        onabort	事件在视频/音频（audio/video）终止加载时触发。
        oncanplay	事件在用户可以开始播放视频/音频（audio/video）时触发。
        oncanplaythrough	事件在视频/音频（audio/video）可以正常播放且无需停顿和缓冲时触发。
        ondurationchange	事件在视频/音频（audio/video）的时长发生变化时触发。
        onended	事件在视频/音频（audio/video）播放结束时触发。
        onerror	事件在视频/音频（audio/video）数据加载期间发生错误时触发。
        onloadeddata	事件在浏览器加载视频/音频（audio/video）当前帧时触发触发。
        onloadedmetadata	事件在指定视频/音频（audio/video）的元数据加载后触发。
        onloadstart	事件在浏览器开始寻找指定视频/音频（audio/video）触发。
        onpause	事件在视频/音频（audio/video）暂停时触发。
        onplay	事件在视频/音频（audio/video）开始播放时触发。
        onplaying	事件在视频/音频（audio/video）暂停或者在缓冲后准备重新开始播放时触发。
        onprogress	事件在浏览器下载指定的视频/音频（audio/video）时触发。
        onratechange	事件在视频/音频（audio/video）的播放速度发送改变时触发。
        onseeked	事件在用户重新定位视频/音频（audio/video）的播放位置后触发。
        onseeking	事件在用户开始重新定位视频/音频（audio/video）时触发。
        onstalled	事件在浏览器获取媒体数据，但媒体数据不可用时触发。
        onsuspend	事件在浏览器读取媒体数据中止时触发。
        ontimeupdate	事件在当前的播放位置发送改变时触发。
        onvolumechange	事件在音量发生改变时触发。
        onwaiting	事件在视频由于要播放下一帧而需要缓冲时触发。
    8>.其他事件：
        onwheel	该事件在鼠标滚轮在元素上下滚动时触发
3、实战案例
    1>.offset方法  获取元素距离body的偏移量
        function offset(curEle) {
            var totalLeft=null;
            var totalTop=null;
            var par=curEle.offsetParent;
            totalLeft+=curEle.offsetLeft;
            totalTop+=curEle.offsetTop;
            while(par){
                if(window.navigator.userAgent.indexOf("MSIE 8")===-1){
                    totalLeft+=par.clientLeft;
                    totalTop+=par.clientTop;
                }
                totalLeft+=par.offsetLeft;
                totalTop+=par.offsetTop;
                par=par.offsetParent;
            }
            return{left:totalLeft,top:totalTop};
        }
        var middle=document.getElementById("middle");
        console.log(offset(middle));
    2>.win方法  获取/设置浏览器的属性
        function win(attr,value) {
            if(typeof value==="undefined"){
                return document.documentElement[attr]||document.body[attr];
            }else{
                document.documentElement[attr]=value;
                document.body[attr]=value;
            }
        }
        console.log(win("clientWidth"));
        win("scrollLeft",200);
    3>.回到顶部
        var backTop=document.getElementById("backTop");
        var speed=20;
        backTop.onclick=function () {
            backTop.timer&&clearInterval(backTop.timer);
            var _this=this;
            backTop.timer=window.setInterval(function () {
                var curTop=utils.win("scrollTop");
                if(curTop<=0){
                    window.clearInterval(_this.timer);
                    window.onscroll=fn;
                    return;
                }
                curTop-=speed;
                utils.win("scrollTop",curTop);
            },10);
            this.style.display="none";
            window.onscroll=null;
        }
        function fn() {
            var curTop=utils.win("scrollTop");
            var screenHeight=utils.win("clientHeight");
            if(curTop>screenHeight){
                backTop.style.display="block";
            }
        }
        window.onscroll=fn;
    4>.getCss  获取元素生效样式
        1、window.getComputedStyle(ele,"伪类");
        2、ele.currentStyle;
        兼容性方法：
            function getCss(ele,attr) {
                var val=null;
                if(window.getComputedStyle){
                    val=window.getComputedStyle(ele)[attr];
                }else{
                    if(attr=="opacity"){
                        val=ele.currentStyle.filter;
                        //alpha(opacity=50);
                        reg=/^alpha\(opacity=(\d+(?:\.\d+)?)\)$/;
                        val=reg.test(val)?reg.exec(val)[1]/100:1;
                    }
                    val=ele.currentStyle[attr];
                }
                var reg=/^-?(?:\d+)(?:\.\d+)?(?:px|pt|em|rem|deg)$/;
                if(reg.test(val)){
                    val=parseFloat(val);
                }
                return val;
            }
            console.log(getCss(oDiv,"display"));
    5>.setCss方法  设置元素样式
            function setCss(ele,attr,val) {
                if(attr=="opacity"){
                    ele.style.opacity=val;
                    ele.style.filter='alpha(opacity='+val*100+')';
                }
                if(attr=="float"){
                    ele.style.cssFloat=val;
                    ele.style.styleFloat=val;
                }
                var reg=/^(width|height|left|top|right|bottom|(margin|padding)(Left|Right|Bottom|Top))$/;
                if(reg.test(attr)){
                    if(!isNaN(val)){
                        val+="px";
                    }
                }
                ele.style[attr]=val;
            }
            setCss(oDiv,"height",600);
    6>.瀑布流
            var oUls=document.getElementsByTagName("ul");
            oUlsAry=utils.listToArray(oUls);
            function liAppendToUl() {
                for(var i=0;i<50;i++){
                    oUlsAry.sort(function (curUl,nextUl) {
                        return utils.getCss(curUl,"height")-utils.getCss(nextUl,"height");
                    });
                    var shortUl=oUlsAry[0];
                    var li=createLi();
                    shortUl.appendChild(li);
                }
            }
            liAppendToUl();
            function createLi() {
                var li=document.createElement("li");
                li.style.height=utils.getRandom(100,260)+"px";
                li.style.background='rgb('+utils.getRandom(0,255)+','+utils.getRandom(0,255)+','+utils.getRandom(0,255)+')'
                return li;
            }
            window.onscroll=function () {
                var curTop=utils.win("scrollTop");
                var screenHeight=utils.win("clientHeight");
                var scrollHeight=utils.win("scrollHeight");
                if(curTop>scrollHeight-screenHeight-100){
                    liAppendToUl();
                }
            }

