1、DOM2事件兼容问题
    标准浏览器中的DOM2级事件：
         1>.同一个事件绑定多个函数，事件触发的时候，按照绑定顺序执行
         2>.同一个事件，同一个函数，同一个阶段不能重复绑定
         3>.绑定事件函数中的this仍然和DOM0一样
    IE低版本浏览器中的DOM2级事件：
         1>.type:on+"click"  事件类型需要在前面加"on"
         2>.不能设置冒泡还是捕获，默认都是冒泡阶段发生
         3>.同一个事件绑定多个函数，事件触发的时候，不会按照绑定顺序执行
         4>.同一个事件，同一个函数，同一个阶段能重复绑定
         5>.绑定事件函数中的this是window
    事件绑定与移除：
        标准：
            绑定事件：ele.addEventListener(type,handler,false);
            移除事件：ele.removeEventListener(type,handler);
        IE低版本：
            绑定事件：ele.attachEvent("on"+type,handler,false);
            移除事件：ele.detachEvent("on"+type,handler);
2>、DOM2绑定事件兼容性处理：
     DOM2低版本IE事件绑定存在兼容问题：
        1>.this   call/apply
        2>.重复绑定  曾经绑定过的不再绑定
        3>.执行顺序
     DOM2事件绑定解决原理：
        只要同一个事件click/keyup绑定多个函数，那么在事件触发的时候，执行的顺序就是乱的。那么我们只能绑定一个函数，并且这个函数按照顺序执行绑定的多个函数，run负责按照顺序执行fn1,fn2...
        run负责找到fn1,fn2....fn10并且执行，那么fn1,fn2...fn10到哪里找呢？
        那么fn1,fn2.....fn10在绑定的过程中就需要存储下来，存到哪里呢？
        ==》把这些需要绑定的函数都存储在自定义属性"数组"上，并且这个自定义属性的名字要有区分，因为click和keyup都需要找到自己对应的数组
        var div1={
            evkeyup:[fn1,fn3],
            evclick:[fn2,fn4,fn5]
        }
        以后再绑定事件的时候，再也不把函数放到事件池中，直接把fn1,fn2...fn10放到对应事件类型的自定义属性数组中，然后事件触发的时候，run负责找到这个对应事件类型的数组，并且按照顺序执行数组内的函数
        div1.attachEvent("onclick",run);
        attachEvent才有权利把函数添加到对应事件类型的事件池中
        事件触发的时候，浏览器只到事件池中来找对应事件类型的函数
3、DOM2移除事件兼容性处理
    1>.先获取到对应事件类型的自定义属性数组
    2>.然后循环数组每一项，和handler做比较
    3>.如果相同，删除掉就可以


预解释，this，自定义属性
正则
图片延迟加载
动画，轮播图
事件  放大镜  鼠标跟随   百度搜索框


多级菜单
回调函数
柯理化
正则





